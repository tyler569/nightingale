cmake_minimum_required(VERSION 3.10)

include(ExternalProject)

set(CMAKE_C_STANDARD 23)
set(CMAKE_C_FLAGS_DEBUG "-g -O0 -Werror")
set(CMAKE_C_FLAGS_RELEASE "-O3")

set(limine_dir "${CMAKE_BINARY_DIR}/limine")
set(iso_file "${CMAKE_SOURCE_DIR}/ngos.iso")
set(iso_dir "${CMAKE_BINARY_DIR}/isodir")
file(MAKE_DIRECTORY ${iso_dir}/boot/limine)

# Prevent macos from creating phantom metadata files in tar archives
# https://unix.stackexchange.com/a/9865
set(ENV{COPYFILE_DISABLE} 1)

# We do this as a manual git download as a workaround for the fact that ExternalProject_Add
# doesn't support shallow clones, or more accurately lies about its support for shallow clones.
# See: https://gitlab.kitware.com/cmake/cmake/-/issues/17770
if (NOT EXISTS ${limine_dir})
    ExternalProject_Add(limine
        SOURCE_DIR "${limine_dir}"
        DOWNLOAD_COMMAND git clone --depth 1 --branch v7.x-binary https://github.com/limine-bootloader/limine.git ${limine_dir}
        CONFIGURE_COMMAND ""
        BUILD_IN_SOURCE 1
        BUILD_COMMAND make
        INSTALL_COMMAND ""
        UPDATE_COMMAND ""
    )
endif ()

project(nightingale C ASM CXX)

execute_process(
    COMMAND git describe --tags
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    OUTPUT_VARIABLE nightingale_version
    OUTPUT_STRIP_TRAILING_WHITESPACE
)

configure_file(include/version.h.in version.h)

list(APPEND nightingale_autogenerated_headers
    ${CMAKE_BINARY_DIR}/autogenerated_errnos.h
    ${CMAKE_BINARY_DIR}/autogenerated_syscall_consts.h
    ${CMAKE_BINARY_DIR}/autogenerated_syscalls_kernel.h
    ${CMAKE_BINARY_DIR}/autogenerated_syscalls_user.h
    ${CMAKE_BINARY_DIR}/autogenerated_errnos.c
    ${CMAKE_BINARY_DIR}/autogenerated_syscall_names.c
    ${CMAKE_BINARY_DIR}/autogenerated_syscalls_kernel.c
    ${CMAKE_BINARY_DIR}/autogenerated_syscalls_user.c
)

add_custom_command(
    OUTPUT ${nightingale_autogenerated_headers}
    COMMAND ${CMAKE_SOURCE_DIR}/script/generate_syscalls.rb ${CMAKE_BINARY_DIR}
    DEPENDS ${CMAKE_SOURCE_DIR}/script/generate_syscalls.rb
    DEPENDS interface/SYSCALLS interface/ERRNOS
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
)

set_source_files_properties(${nightingale_autogenerated_headers} PROPERTIES GENERATED 1)

add_custom_target(generate_headers DEPENDS ${nightingale_autogenerated_headers})

add_compile_options(
    -Wall
    -Wextra
    -ffreestanding
    -fstrict-aliasing
    -nostdlib
    -Wno-unused-variable
    -Wno-unused-parameter
    -Wno-sign-compare
    -Wno-address-of-packed-member
    -Wno-deprecated-non-prototype
)

add_compile_definitions(
    __nightingale__=1
    _NG_SOURCE=1
)

set(CMAKE_EXE_LINKER_FLAGS "-static")

include_directories(${CMAKE_BINARY_DIR})
include_directories(include)

add_subdirectory(kernel)
add_subdirectory(libc)
add_subdirectory(linker)
add_subdirectory(user)

add_dependencies(nightingale_kernel generate_headers)
add_dependencies(c generate_headers)
add_dependencies(elf generate_headers)

add_custom_command(
    DEPENDS limine nightingale_kernel initrd "${CMAKE_SOURCE_DIR}/kernel/limine.cfg"
    OUTPUT ${iso_file}
    COMMAND cp ${CMAKE_SOURCE_DIR}/kernel/limine.cfg ${iso_dir}/boot/limine
    COMMAND cp ${limine_dir}/limine-bios.sys ${iso_dir}/boot/limine
    COMMAND cp ${limine_dir}/limine-bios-cd.bin ${iso_dir}/boot/limine
    COMMAND cp ${limine_dir}/limine-uefi-cd.bin ${iso_dir}/boot/limine
    COMMAND cp ${CMAKE_BINARY_DIR}/kernel/nightingale_kernel ${iso_dir}/boot
    COMMAND cp ${CMAKE_BINARY_DIR}/user/initrd.tar ${iso_dir}/boot
    COMMAND xorriso -as mkisofs -b boot/limine/limine-bios-cd.bin
    -no-emul-boot -boot-load-size 4 --boot-info-table
    --efi-boot boot/limine/limine-uefi-cd.bin
    -efi-boot-part --efi-boot-image --protective-msdos-label
    "${iso_dir}" -o "${iso_file}"
    COMMAND ${limine_dir}/limine bios-install ${iso_file}
)
add_custom_target(iso ALL DEPENDS ${iso_file})
